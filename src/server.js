// Khai b√°o th∆∞ vi·ªán *******************************************
const express = require("express");
const path = require("path");
const ejs = require("ejs");
const morgan = require("morgan");
const database = require("./config/database");
const route = require("./routers/index.routes");
const bodyParser = require("body-parser");
const cookieParser = require("cookie-parser");
const cors = require("cors");
// Kh·ªüi t·∫°o server *******************************************
const app = express();
// const process = require("process");
//********************* Kh·ªüi t·∫°o c·ªïng server
const PORT = process.env.PORT || 3416;
app.listen(PORT, () => {
  console.log(`üê≤üê≤üê≤ Server is running on PORT: ${PORT} !!! üçÄüçÄüçÄ`);
});

app.use(cors()); // Cho ph√©p chia s·∫ª api v·ªõi localhost kh√°c
//********************* HTTP logger
//app.use(morgan("combined")); //thu vien morgan dung de log ra http request tu client -> server
//********************* HTTP logger
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(bodyParser.json());
//************************ Config Froala
const appRootPath = require("app-root-path");
app.use(
  "/froalacss",
  express.static(
    path.join(
      appRootPath.path,
      "/node_modules/froala-editor/css/froala_editor.pkgd.min.css"
    )
  )
);

app.use(
  "/froalajs",
  express.static(
    path.join(
      appRootPath.path,
      "/node_modules/froala-editor/js/froala_editor.pkgd.min.js"
    )
  )
);
app.use(
  "/deleteImage",
  express.static(
    path.join(
      appRootPath.path,
      "/node_modules/froala-editor/js/plugins/image.min.js"
    )
  )
);
//********************* config imagesPath (public path)
app.use("/public", express.static(__dirname + "/public"));
app.use("/image", express.static(path.join(__dirname, "public/images")));
app.use("/css", express.static(path.join(__dirname, "public/styles")));
app.use("/js", express.static(path.join(__dirname, "public/javascripts")));

app.use(express.static("public"));

//********************* Config template ejs
app.set("views", path.join(__dirname, "/resources/views"));
app.set("view engine", "ejs");
// //******************** Auth0 ******************* */
// const { auth } = require("express-openid-connect");
// const config = {
//   // authRequired: false,
//   // auth0Logout: true,
//   // secret: process.env.SECRET,
//   // baseURL: process.env.BASEURL,
//   // clientID: process.env.BASEURL,
//   // issuerBaseURL: process.env.ISSUER,

//   authRequired: false,
//   auth0Logout: true,
//   secret:
//     "oiumtsxnjpdbhkkwjueehzxebvtjjlgzierahwwjqrnuqyqyrsuzpuwffgizpegawtdzdbvkynrpbjipzxfcnnbyrdkdxzir",
//   baseURL: "http://localhost:3416",
//   clientID: "Dd0kzG9dTjvL52nTAwKgv7d7QDJJO8l6",
//   issuerBaseURL: "https://dev-m7l5oz18.us.auth0.com",
// };

// // auth router attaches /login, /logout, and /callback routes to the baseURL
// app.use(auth(config));

// // req.isAuthenticated is provided from the auth router

// app.get("/testAuth", (req, res) => {
//   res.send(req.oidc.isAuthenticated() ? "Logged in" : "Logged out");
// });
// const { requiresAuth } = require("express-openid-connect");

// app.get("/profile", requiresAuth(), (req, res) => {
//   res.send(JSON.stringify(req.oidc.user));
// });

//***************************************** */

//********************* Connect to Database (MongoDB) - K·∫øt n·ªëi t·ªõi c∆° s·ªü d·ªØ li·ªáu MONGODB

database.connect();

// ******************** Cofig CookieParser
app.use(cookieParser());

//********************* Config router app
route.configRoute(app);

// const View = require("./models/View");
// const Manga = require("./models/Manga");

// async function initViewRepository() {
//   try {
//     const mangas = await Manga.find();
//     for (let i = 0; i < mangas.length; i++) {
//       const createdViewRepo = await View.create({
//         type: "MANGA",
//         check: mangas[i].slug,
//       });
//     }
//     console.log("DONE !");
//   } catch (error) {
//     console.log(error);
//   }
// }
// initViewRepository();
// const MangaModel = require("./models/Manga");
// const Manga = require("./models/Manga");
// const Chapter = require("./models/Chapter");
// const Slide = require("./models/Slide");
// MangaModel.deleteOne({ name: "Clover" })
//   .then(() => {
//     console.log("deleted");
//   })
//   .catch((error) => console.log(error));

// MangaModel.create({
//   name: "Dragon Ball",
//   anotherName: "B·∫£y vi√™n ng·ªçc r·ªìng",
//   image: "https://cdn-amz.fadoglobal.io/images/I/81S8xoiksVL.jpg", // updating...(ex: require)
//   author: "Toriyama Akira",
//   type: ["Action", "Ph∆∞u l∆∞u", "Chi·∫øn d·ªãch", "K·ª≥ ·∫£o", "16+"],
//   serve: "all",
//   description:
//     "M·ªôt c·∫≠u b√© c√≥ ƒëu√¥i kh·ªâ ƒë∆∞·ª£c t√¨m th·∫•y b·ªüi m·ªôt √¥ng l√£o s·ªëng m·ªôt m√¨nh trong r·ª´ng, √¥ng ƒë·∫∑t t√™n l√† Son Goku v√† xem ƒë·ª©a b√© nh∆∞ l√† ch√°u c·ªßa m√¨nh. M·ªôt ng√†y n·ªç Goku t√¨nh c·ªù g·∫∑p m·ªôt c√¥ g√°i t√™n l√† Bulma tr√™n ƒë∆∞·ªùng ƒëi b·∫Øt c√° v·ªÅ, Goku v√† Bulma ƒë√£ c√πng nhau truy t√¨m b·∫£y vi√™n ng·ªçc r·ªìng. C√°c vi√™n ng·ªçc r·ªìng n√†y ch·ª©a ƒë·ª±ng m·ªôt b√≠ m·∫≠t c√≥ th·ªÉ tri·ªáu h·ªìi m·ªôt con r·ªìng v√† ban ƒëi·ªÅu ∆∞·ªõc cho ai s·ªü h·ªØu ch√∫ng. Tr√™n cu·ªôc h√†nh tr√¨nh d√†i ƒëi t√¨m nh·ªØng vi√™n ng·ªçc r·ªìng, h·ªç g·∫∑p nh·ªØng ng∆∞·ªùi b·∫°n (Yamcha, Krillin,Yajirobe, Thi√™n, Gi√°o t·ª≠, Oolong,...) v√† nh·ªØng ƒë·∫•u sƒ© huy·ªÅn tho·∫°i c≈©ng nh∆∞ nhi·ªÅu √°c qu·ª∑. H·ªç tr·∫£i qua nh·ªØng kh√≥ khƒÉn v√† h·ªçc h·ªèi c√°c chi√™u th·ª©c v√µ thu·∫≠t ƒë·∫∑c bi·ªát ƒë·ªÉ tham gia thi ƒë·∫•u trong ƒë·∫°i h·ªôi v√µ thu·∫≠t th·∫ø gi·ªõi ƒë∆∞·ª£c t·ªï ch·ª©c h·∫±ng nƒÉm. Ngo√†i c√°c s·ª± ki·ªán ƒë·∫°i h·ªôi v√µ thu·∫≠t, Goku v√† c√°c b·∫°n c√≤n ph·∫£i ƒë·ªëi ph√≥ v·ªõi c√°c th·∫ø l·ª±c ƒë·ªôc √°c nh∆∞ ƒê·∫°i v∆∞∆°ng Pilaf, Qu√¢n ƒëo√†n khƒÉn ƒë·ªè c·ªßa ƒê·ªôc nh√£n t∆∞·ªõng qu√¢n, ƒê·∫°i ma v∆∞∆°ng Picollo v√† nh·ªØng ƒë·ª©a con c·ªßa h·∫Øn. Chi·∫øn binh ng∆∞·ªùi Saiya: Radiz, Ho√†ng t·ª≠ Saiya Vegeta c√πng t√™n c·∫≠n v·ªá Nappa. R·ªìi h·ªç ƒëi ƒë·∫øn Namek, g·∫∑p r·ªìng th·∫ßn c·ªßa Namek; ch·∫°m tr√°n Frieza, khi tr·ªü v·ªÅ Tr√°i ƒê·∫•t ƒë·ª•ng ƒë·ªô Nh√≥m android s√°t th·ªß (c√°c Android 16, 17, 18,19, 20) v√† sau ƒë√≥ l√† qu√°i v·∫≠t t·ª´ t∆∞∆°ng lai Cell, K·∫ª th√π t·ª´ v≈© tr·ª• Majin Buu, th·∫ßn h·ªßy di·ªát Beerus, c√°c ƒë·ªëi th·ªß t·ª´ c√°c v≈© tr·ª• song song, ƒê·ªëi th·ªß m·∫°nh nh·∫•t v·ªõi Goku l√† Jiren (ƒë·∫øn t·ª´ v≈© tr·ª• 11)",
//   status: "ƒêang ti·∫øn h√†nh",
//   hot: true,
//   statistical: { likes: 2200, hearts: 5411, comments: 1210, views: 1230000 }, // updating...(ex: require)
//   contentId: "62b94f45e599a225e0a674a0", // updating... (ex: require)
//   fanmade: false,
// })
//   .then((data) => console.log(data))
//   .catch((error) => console.log(error));
