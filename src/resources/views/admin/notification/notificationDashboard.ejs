<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>NOTIFICATION DASHBOARD</title>
  <link rel="icon" href="/image/tablogo.png">
  <link rel="stylesheet" href="/css/fullscreenImg.css">

  <%- include("../../partials/link") %>

  <!----===== Boxicons CSS ===== -->
  <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
  <link rel="stylesheet" href="/css/manage_manga.css">

</head>

<body>
  <%- include("../../admin/partials/header") %>
  <div class="container mt-2">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb mt-2">
        <li class="breadcrumb-item"><a href="/management/content/admin">Trang quản lí</a></li>
        <li class="breadcrumb-item active" aria-current="page">Quản lí thông báo</li>
      </ol>
    </nav>
    <div class="row d-flex justify-content-center align-items-center">
      <div class="col-sm-12 col-md-6 col-lg-4 d-flex">
        <h3>Danh sách Thông báo</h3>
        <p class="align-items-center">
        </p>
      </div>
      <div class="col-sm-12 col-md-6 col-lg-4 d-flex mb-1">
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-warning btn-sm" data-toggle="modal" data-target="#createNotification">
          Đăng Thông báo
        </button>

        <!-- Modal -->
        <div class="modal fade" id="createNotification" tabindex="-1" role="dialog" aria-labelledby="createNotificationLabel" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="createNotificationLabel">Đăng thông báo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form>
                  <div class="form-group">
                    <label for="noti-name">Tên thông báo</label>
                    <input type="text" class="form-control" id="noti-name" placeholder="Nhập tên thông báo">
                  </div>
                  <div class="form-group">
                    <label for="noti-content">Nội dung</label>
                    <textarea type="text" class="form-control" id="noti-content" placeholder="Nhập nội dung thông báo"></textarea>
                  </div>
                  <div class="form-group">
                    <label for="noti-img-create">Ảnh thông báo (Nếu có)</label>
                    <input type="file" class="form-control" required name="noti-img-create" id="noti-img-create" onchange="changeImgCreate(this)" />
                    <div class="text-center">
                      <img src="" id="preview-img-create" alt="">
                    </div>
                  </div>
                  <div class="form-group">
                    <label for="noti-link">Link thông báo</label>
                    <input type="text" class="form-control" id="noti-link" placeholder="Nhập đường link thông báo">
                  </div>
                  <div class="text-center">
                    <button type="submit" class="btn btn-primary" onclick="createNotification(event)">Đăng</button>
                  </div>
                </form>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
              </div>
            </div>
          </div>
        </div>

        <a href="/management/content/notification/trash" class="btn btn-sm btn-dark ml-2">Thùng rác <i class="fas fa-trash-alt"></i></a>
      </div>
      <div class="col-sm-12 col-md-6 col-lg-4 d-flex justify-content-between align-items-center mb-1">
        <button class="light-mode-button" aria-label="Toggle Light Mode" onclick="toggle_light_mode()">
          <span></span>
          <span></span>
        </button>
      </div>
    </div>
    <div id="toolbar" class="d-flex">
      <button id="deleteChecked" class="btn btn-danger btn-sm mb-2" onclick="deleteAll()">Xóa hết <i class="fas fa-trash"></i></button>
      <%- include("notificationSearching.ejs")%>
      <div class="d-block ml-3">
        <button class="btn btn-success" onclick="refresh()"><i class="fas fa-sync-alt"></i></button>
      </div>
    </div>
    <table class="table table-dark table-striped table-hover" id="table">
      <thead>
        <tr class="text-center">
          <th scope="col">STT</th>
          <th scope="col">Tên</th>
          <th scope="col">Ảnh</th>
          <th scope="col">Nội dung
            <% if(!locals.sortContent){%>
            <i class="fas fa-sort" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp" onclick="sorting('sortContent',-1)"></i>
            <%} else if(locals.sortContent && locals.sortContent === "-1"){%>
            <i class="fas fa-sort-up" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp tăng dần" onclick="sorting('sortContent',1)"></i>
            <%} else if(locals.sortContent && locals.sortContent === "1"){%>
            <i class="fas fa-sort-down" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp giảm dần" onclick="sorting('sortContent',-1)"></i>
            <%}%></th>
          <th scope="col">Gửi từ</th>
          <th scope="col"><i class="fas fa-link"></i></th>
          <th scope="col">Tạo lúc
            <% if(!locals.sortCreatedAt){%>
            <i class="fas fa-sort" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp" onclick="sorting('sortCreatedAt',-1)"></i>
            <%} else if(locals.sortCreatedAt && locals.sortCreatedAt === "-1"){%>
            <i class="fas fa-sort-up" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp tăng dần" onclick="sorting('sortCreatedAt',1)"></i>
            <%} else if(locals.sortCreatedAt && locals.sortCreatedAt === "1"){%>
            <i class="fas fa-sort-down" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp giảm dần" onclick="sorting('sortCreatedAt',-1)"></i>
            <%}%>


          </th>
          <th scope="col">Cập nhật
            <% if(!locals.sortUpdatedAt){%>
            <i class="fas fa-sort" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp" onclick="sorting('sortUpdatedAt',-1)"></i>
            <%} else if(locals.sortUpdatedAt && locals.sortUpdatedAt === "-1"){%>
            <i class="fas fa-sort-up" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp tăng dần" onclick="sorting('sortUpdatedAt',1)"></i>
            <%} else if(locals.sortUpdatedAt && locals.sortUpdatedAt === "1"){%>
            <i class="fas fa-sort-down" style="cursor: pointer;" data-toggle="tooltip" data-placement="bottom" title="Sắp xếp giảm dần" onclick="sorting('sortUpdatedAt',-1)"></i>
            <%}%>
          </th>
          <th scope="col"><input type="checkbox" name="check-all" id="check-all" onchange="checkAll(this)"></th>
          <th scope="col"><i class="fas fa-cog"></i></th>
        </tr>
      </thead>
      <tbody>
        <% if (publicNotifications.length !== 0){%>
            <% publicNotifications.forEach((notification,index)=>{%>
        <tr id="noti-<%= notification._id%>">
          <th scope="row" class="text-center"><%= index + 1 %> </th>
          <td><%= notification.name %></td>
          <td><img src="<%= notification.image %>" alt="notification-img" style="width: 100px;height: 100px; object-fit: cover;" data-toggle="modal" data-target="#imgModal-<%= notification._id%>" />
            <!-- Modal -->
            <div class="modal fade" id="imgModal-<%= notification._id%>" tabindex="-1" role="dialog" aria-labelledby="imgModal-<%= notification._id%>Label" aria-hidden="true">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body text-center">
                    <img src="<%= notification.image %>" alt="notification-img" style="width: 100%" data-toggle="modal" data-target="#imgModal" />
                  </div>
                </div>
              </div>
            </div>
          </td>
          <td><%= notification.content %></td>
          <td>
            <button class="btn btn-warning btn-sm" onclick="checkFromUser('<%= notification.fromUser %>')" data-toggle="modal" data-target="#author-<%= notification.fromUser%>">
              Xem
            </button>
            <div class="modal fade" id="author-<%= notification.fromUser%>" tabindex="-1" role="dialog" aria-labelledby="author-<%= notification.fromUser%>Label" aria-hidden="true">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title text-dark" id="authorModalLabel">Người đăng</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body" id="infor-<%= notification.fromUser %>">
                    <!-- <div class="author text-dark d-flex justify-content-center align-items-center flex-column">
                      <div class="author__avatar" style="background-image: url('/public/avatars/admin/1661738593357.jpg');width: 150px; height: 150px; background-size:cover; background-position:top center; border-radius: 50%">
                      </div>
                      <div class="author__name">
                        <b>NGuyen van Anh</b>
                      </div>
                      <div class="author__email">
                        <b>tamlong12032000@gmail.com</b>
                      </div>
                      <div class="author__role">
                        <b>CA</b>
                      </div> -->
                  </div>
                </div>
              </div>
            </div>
  </div>
  </td>
  <td><a href="<%= notification.url %>">Đi tới</a></td>
  <td><%= moment(notification.createdAt).format("L") %> <br> <%= moment(notification.createdAt).format("LT") %></td>
  <td><%= moment(notification.updatedAt).format("L") %> <br> <%= moment(notification.updatedAt).format("LT") %></td>
  <td><input type="checkbox" name="check-row" class="check-row" data-id="<%= notification._id %>" onchange="changeElm(this)"></td>
  <td class="text-center">
    <div class="btn btn-primary btn-sm" data-toggle="modal" data-target="#update-<%= notification._id%>">Sửa</div> <br>
    <div class="modal fade" id="update-<%= notification._id%>" tabindex="-1" role="dialog" aria-labelledby="update-<%= notification._id%>Label" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title text-dark" id="updateModalLabel">Cập nhật thông báo</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form class="text-dark">
              <div class="form-group">
                <label class="float-left" for="name-update-<%= notification._id %>"><b>
                    Tên thông báo
                  </b></label>
                <input type="text" class="form-control" id="name-update-<%= notification._id %>" value="<%= notification.name %>" placeholder="Nhập tên thông báo">
              </div>
              <div class="form-group">
                <label class="float-left" for="content-update-<%= notification._id %>"><b>
                    Nội dung
                  </b></label>
                <textarea type="text" class="form-control" id="content-update-<%= notification._id %>" placeholder="Nhập nội dung thông báo"><%= notification.content %></textarea>
              </div>
              <div class="form-group">
                <label class="float-left" for="img-update-<%= notification._id %>"><b>
                    Ảnh thông báo (Nếu có)
                  </b></label>
                <input type="file" class="form-control" required name="noti-img-update" id="img-update-<%= notification._id %>" onchange="changeImgUpdate(this)" />
                <div class="text-center">
                  <img src="<%= notification.image %>" id="preview-img-update" alt="">
                </div>
              </div>
              <div class="form-group">
                <label class="float-left" for="link-update-<%= notification._id %>"><b>
                    Link thông báo
                  </b></label>
                <input type="text" class="form-control" id="link-update-<%= notification._id %>" placeholder="Nhập đường link thông báo" value="<%= notification.url %>">
              </div>
              <div class="text-center">
                <button type="submit" class="btn btn-primary" id="btn-<%= notification._id %>" onclick="updateNotification(event,'<%= notification._id %>')" data-oldImg="<%= notification.image %>">Sửa</button>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
          </div>
        </div>
      </div>
    </div>
    <!--  -->
    <div class="btn btn-danger btn-sm mt-2" onclick="softDelete('<%= notification._id %>')">Xóa</div>
  </td>
  </tr>
  <%}) %>
  <%}else{%>
  <div class="text-center"><b class="text-danger">Chưa có thông báo nào !</b></div>
  <%} %>
  </tbody>
  </table>

  <!-- paging -->
  <div class="container mt-4 d-flex justify-content-center">
    <nav aria-label="Page navigation">
      <ul class="pagination flex-wrap">
        <!-- First Page -->
        <li class="page-item <% if(!navigator.previous){ %>disabled<%}%>"><button class="page-link"  onclick="changeQueryPaging('page','1','limit','<%= navigator.limit %>')">First</button></li>
        <!-- Previous Page -->
        <li class="page-item <% if(!navigator.previous){ %>disabled<%}%>"><button class="page-link"  onclick="changeQueryPaging('page','<%= (navigator.previous) && navigator.previous.previousPage %>','limit','<%= navigator.limit %>')">Previous</button></li>
        <!-- Pages -->
        <% for(var i=1; i<=navigator.totalPages; i++) {%>
        <% if(i > navigator.activePage - 4 && i< navigator.activePage + 4 ){%>
        <li class=" page-item <%= (navigator.activePage === i) && 'active' %>"><a class="page-link" onclick="changeQueryPaging('page','<%= i %>','limit','<%= navigator.limit %>')"><%= i %></a></li>
        <%} %>
        <% }%>
        <!-- Next Page -->
        <li class="page-item <% if(!navigator.next){ %>disabled<%}%>"><button class="page-link" onclick="changeQueryPaging('page', '<%= (navigator.next) && navigator.next.nextPage %>', 'limit', '<%= navigator.limit %>')">Next</button></li>
        <!-- Last Page -->
        <li class="page-item <% if(!navigator.next){ %>disabled<%}%>"><button class="page-link" onclick="changeQueryPaging('page', '<%= navigator.totalPages %>', 'limit', '<%= navigator.limit %>')">Last</button></li>
        <li class="page-item">
          <select class="form-select form-control ml-2" onchange="changeLimitQuery(this)">
            <option selected>Giới hạn</option>
            <option value="2" <%= (navigator.limit === 2) && "selected" %>>2</option>
            <option value="3" <%= (navigator.limit === 3) && "selected" %>>3</option>
            <option value=" 5" <%= (navigator.limit === 5) && "selected" %>>5</option>
            <option value="10" <%= (navigator.limit === 10) && "selected" %>>10</option>
            <option value="20" <%= (navigator.limit === 20) && "selected" %>>20</option>
            <option value="30" <%= (navigator.limit === 30) && "selected" %>>30</option>
          </select>
        </li>
      </ul>
    </nav>
  </div>
  </div>
</body>
<%- include("../../partials/script") %>
<script src="/js/moment.min.js"></script>
<script src="/js/darkMode.js"></script>
<script>
  const previewImgCreate = document.getElementById("preview-img-create");

  function changeImgCreate(imgInput) {
    const [file] = imgInput.files;
    if (file) {
      previewImgCreate.setAttribute("src", URL.createObjectURL(file))
    }
  }

  function createNotification(event) {
    event.preventDefault();
    const checkImgFile = document.getElementById("noti-img-create");
    const name = document.getElementById("noti-name").value;
    const content = document.getElementById("noti-content").value;
    const link = document.getElementById("noti-link").value;


    const formData = new FormData();
    formData.append("notification", checkImgFile.files[0]);
    formData.append("name", name)
    formData.append("content", content)
    formData.append("url", link)
    //check empty
    if (!checkImgFile.files[0] || !name || !content || !link) {
      swal({
        title: "Thông báo",
        text: "Bạn phải điền đầy đủ thông tin",
        icon: "error",
        button: "OK!",
      });
      return;
    }
    fetch('/management/content/notification/api/create', {
        method: 'POST', // or 'PUT'
        body: formData,
      })
      .then(response => response.json())
      .then(result => {
        if (result.isSuccess) {
          swal({
            title: "Thông báo",
            text: "Đăng thông báo thành công",
            icon: "success",
            button: "OK!",
          });
          return;
        } else if (!result.isSuccess && result.errorCode === "ALREADY_EXISTS") {
          swal({
            title: "Thông báo",
            text: "Đường link đã tồn tại >.<",
            icon: "error",
            button: "OK!",
          });
          return;
        } else if (!result.isSuccess) {
          swal({
            title: "Thông báo",
            text: "Có lỗi xảy ra",
            icon: "error",
            button: "OK!",
          });
          return;
        }
      })
      .catch((error) => {
        console.log('Error:', error);
      })
  }
</script>
<script>
  function changeQuery(feild, value) {
    const urlParams = new URLSearchParams(window.location.search);

    urlParams.set(feild, value);
    urlParams.set("page", "1");
    window.location.search = urlParams;
  }

  function changeTypeQuery(it) {
    const urlParams = new URLSearchParams(window.location.search);
    urlParams.set('type', it.value);
    urlParams.set("page", "1");
    window.location.search = urlParams;
  }

  function changeQueryPaging(page, pageValue, limit, limitValue) {
    const urlParams = new URLSearchParams(window.location.search);

    urlParams.set(page, pageValue);
    urlParams.set(limit, limitValue);

    window.location.search = urlParams;
  }

  function changeLimitQuery(it) {
    const urlParams = new URLSearchParams(window.location.search);

    urlParams.set('limit', it.value);
    urlParams.set("page", "1");

    window.location.search = urlParams;
  }

  function checkFromUser(fromUserId) {
    fetch('/management/content/notification/api/get-author/' + fromUserId)
      .then(response => response.json())
      .then(result => {
        const author = result.data;
        document.getElementById(`infor-${fromUserId}`).innerHTML = `<div class="author text-dark d-flex justify-content-center align-items-center flex-column">
          <div class="author__avatar" style="background-image: url('/public/avatars/admin/${author.avatar}');width: 150px; height: 150px;
          border:2px black solid; background-size:cover; background-position:top center; border-radius: 50%">
          </div>
          <div class="author__name">
            <b>${author.username}</b>
          </div>
          <div class="author__email">
            <b>${author.email}</b>
          </div>
          <div class="author__role">
            <b><span class="badge badge-primary">${author.role}</span></b>
          </div>`
      }).catch((error) => {
        console.log('Error:', error);
      })
  }
</script>
<script>
  function softDelete(notificationId) {
    swal({
      title: "Bạn có chắc chắn muốn xóa không",
      text: "Nếu xóa bạn vẫn có thể khôi phục thông báo !",
      icon: "warning",
      buttons: true,
      dangerMode: true,
    }).then((willDelete) => {
      if (willDelete) {
        fetch('/management/content/notification/api/delete/' + notificationId, {
            method: 'DELETE', // or 'PUT'
          })
          .then(response => response.json())
          .then(result => {
            console.log(result)
            if (result.isSuccess) {
              swal({
                title: "Thông báo",
                text: "Xóa thành công",
                icon: "success",
                button: "OK!",
              });
              document.getElementById(`noti-${notificationId}`).remove();

              return;
            } else if (!result.isSuccess) {
              swal({
                title: "Thông báo",
                text: "Có lỗi xảy ra",
                icon: "error",
                button: "OK!",
              });
              return;
            }
          }).catch((error) => {
            console.log('Error:', error);
          })
      } else {
        return;
      }
    });
  }
</script>
<script>
  //Update Notification
  const previewImgUpdate = document.getElementById("preview-img-update");

  function changeImgUpdate(imgInput) {
    const [file] = imgInput.files;
    if (file) {
      previewImgUpdate.setAttribute("src", URL.createObjectURL(file))
    }
  }

  function updateNotification(event, notificationId) {
    event.preventDefault();
    // console.log(notificationId)
    const updateBtn = document.getElementById(`btn-${notificationId}`)
    const oldImg = updateBtn.getAttribute("data-oldImg");

    const checkImgFile = document.getElementById(`img-update-${notificationId}`);
    const name = document.getElementById(`name-update-${notificationId}`).value;
    const content = document.getElementById(`content-update-${notificationId}`).value;
    const link = document.getElementById(`link-update-${notificationId}`).value;

    const formData = new FormData();
    formData.append("notification", checkImgFile.files[0]);
    formData.append("name", name)
    formData.append("content", content)
    formData.append("url", link)
    formData.append("oldImg", oldImg)

    console.log({
      notificationId,
      img: checkImgFile.files[0],
      name,
      content,
      link
    })
    fetch('/management/content/notification/api/update/' + notificationId, {
        method: 'PATCH', // or 'PUT'
        body: formData,
      })
      .then(response => response.json())
      .then(result => {
        if (result.isSuccess) {
          swal({
            title: "Thông báo",
            text: "Sửa thông báo thành công",
            icon: "success",
            button: "OK!",
          });
          return;
        } else if (!result.isSuccess && result.errorCode === "ALREADY_EXISTS") {
          swal({
            title: "Thông báo",
            text: "Đường link đã tồn tại >.<",
            icon: "error",
            button: "OK!",
          });
          return;
        } else if (!result.isSuccess) {
          swal({
            title: "Thông báo",
            text: "Có lỗi xảy ra",
            icon: "error",
            button: "OK!",
          });
          return;
        }
      }).catch((error) => {
        console.log('Error:', error);
      })
  }
</script>
<script>
  const checkList = document.querySelectorAll(".check-row");
  const checkboxAllBtn = document.getElementById("check-all");

  function checkAll(input) {
    const bool = input.checked;
    checkList.forEach((checkInput, index) => {
      checkInput.checked = bool;
    })
  }

  function changeElm(input) {
    let totalChecked = 0;
    checkList.forEach((checkbox, index) => {
      if (checkbox.checked === true) {
        totalChecked++
      }
    });

    if (!input.checked) {
      checkboxAllBtn.checked = false;
    } else {
      checkboxAllBtn.checked = totalChecked === checkList.length;
    }
  }

  function deleteAll() {
    const notiIdList = [];
    checkList.forEach((checkbox, index) => {
      if (checkbox.checked === true) {
        notiIdList.push(checkbox.getAttribute("data-id"))
      }
    });

    swal({
      title: "Bạn có chắc chắn muốn xóa những thông báo không",
      text: "Nếu xóa bạn vẫn có thể khôi phục thông báo !",
      icon: "warning",
      buttons: true,
      dangerMode: true,
    }).then((willDelete) => {
      if (willDelete) {
        fetch('/management/content/notification/api/delete-checked/', {
            method: 'DELETE', // or 'PUT'
            headers: {
              "Content-Type": "application/json",
              // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: JSON.stringify(notiIdList)
          })
          .then(response => response.json())
          .then(result => {
            console.log(result)
            if (result.isSuccess) {
              swal({
                title: "Thông báo",
                text: "Xóa thành công",
                icon: "success",
                button: "OK!",
              }).then(() => {
                location.reload();
              })
              return;
            } else if (!result.isSuccess && result.errorCode === "BAD_REQUEST") {
              swal({
                title: "Thông báo",
                text: "Danh sách cần xóa trống",
                icon: "error",
                button: "OK!",
              });
              return;
            } else if (!result.isSuccess) {
              swal({
                title: "Thông báo",
                text: "Có lỗi xảy ra",
                icon: "error",
                button: "OK!",
              });
              return;
            }
          }).catch((error) => {
            console.log('Error:', error);
          })
      } else {
        return;
      }
    });
  }

  function refresh() {
    location.href = "/management/content/notification?page=1&limit=2"
  }
</script>
<script>
  // Tooltips
  $(function() {
    $('[data-toggle="tooltip"]').tooltip();
  });


  function sorting(feild, num) {
    const params = new URLSearchParams(window.location.search);
    let arr = [];
    for (var value of params.keys()) {
      if (value !== feild && value.includes("sort")) {
        arr.push(value);
      }
    }

    const urlParams = new URLSearchParams(window.location.search);
    arr.forEach((item) => {
      urlParams.delete(item)
    })

    urlParams.set(feild, num);

    window.location.search = urlParams;

  }
</script>

</html>